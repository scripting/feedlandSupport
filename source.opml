<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Wed, 03 Aug 2022 15:56:36 GMT -->
<opml version="2.0">
	<head>
		<title>nodeEditor: feedlandsupport</title>
		<dateCreated>Sat, 23 Jul 2022 14:45:29 GMT</dateCreated>
		<dateModified>Wed, 03 Aug 2022 15:56:36 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 6, 20</expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>84</windowTop>
		<windowLeft>122</windowLeft>
		<windowBottom>1042</windowBottom>
		<windowRight>1321</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/feedlandsupport/">
			<outline text="docs/overview.md" created="Sat, 23 Jul 2022 14:45:46 GMT">
				<outline text="# Greetings from FeedLand" created="Sat, 23 Jul 2022 14:46:43 GMT">
					<outline text="&lt;i&gt;This is the first email I am sending to testers of the initial release of the product. DW&lt;/i&gt;" created="Sat, 23 Jul 2022 14:47:04 GMT"/>
					<outline text="Good evening everyone! ;-)"/>
					<outline text="A while back I asked if you were interested in helping get the bugs out of a new product. "/>
					<outline text="So I just wanted to check in, and make sure this email address works and give you a rough idea how this will work."/>
					<outline text="Now I'm going to throw a bunch of facts at you. This is not meant to be a tutorial, rather to give you an overview of this new platform called FeedLand."/>
					<outline text="### Community" created="Sat, 23 Jul 2022 15:51:44 GMT">
						<outline text="First it's a community project. "/>
						<outline text="In the community there are feeds and people. "/>
						<outline text="People subscribe to feeds. "/>
						<outline text="People can add new feeds. For now there's a limit of 100 new feeds each user gets to add.  ">
							<outline text="* So go slow and carefully, don't just dump your entire 8-year OPML subscription list in the database."/>
							</outline>
						<outline text="You can also subscribe to feeds other people have added. There's no limit there. Subscribe to as many as you like."/>
						</outline>
					<outline text="### Feeds and feed lists" created="Sat, 23 Jul 2022 15:52:01 GMT">
						<outline text="All the feeds you've subscribed to will appear on your feed list, in reverse chronological order of when they were updated. "/>
						<outline text="You get to your feed list by choosing the first command in the menu, which is named &lt;i&gt;Menu.&lt;/i&gt;"/>
						<outline text="A feed is &quot;Updated&quot; when a new item has appeared, although we do recognize other kinds of updates, and sync them up with the database. Items can change over time. But a feed only changes when there's a new item."/>
						<outline text="I am starting to add feeds, before you have access to the database, by subscribing to a bunch of feeds. "/>
						<outline text="I've started out by subscribing to about 20 feeds, more or less. At first I thought they would be exemplary feeds, but right now who knows what that means. So consider them roughly random."/>
						<outline text="You can see the feeds I've subscribed to. And by clicking on a checkbox next to a feed, you can subscribe to it too. Or you can click on the Info link to find out who else is subscribed to the feed, and see what they're subscribed to too. "/>
						<outline text="You get to find new feeds and people this way. "/>
						<outline text="If you've used &lt;a href=&quot;http://bingeworthy.io/&quot;&gt;BingeWorthy&lt;/a&gt;, it works the same way, only here it's feeds and there it's TV shows. And people. In both cases it involves people. "/>
						</outline>
					<outline text="### Where this goes" created="Sat, 23 Jul 2022 15:52:35 GMT">
						<outline text="I don't know where this goes. In a real way that'll be up to the users -- ie you, to start. So I'll be watching and listening, to get ideas. "/>
						<outline text="I want to go slow and learn a lot as we go. I've been doing that all through this project. I want to, this once, get it right. Really advance the art in how we use feeds. To take what we know now in 2022, that we didn't know last time we really dug into this stuff (in my case that was a pretty long time ago). "/>
						</outline>
					<outline text="### Back up your work!" created="Sat, 23 Jul 2022 15:52:48 GMT">
						<outline text="I will say this part many times: Back up your work! There's a big orange XML icon on your feedlist page. When you click it you'll get an OPML subscription list. Save the file locally, periodically. You never know when the database will be reset. This is very early, so who knows what kinds of problems will come up. ">
							<outline text="* You can also get an OPML subscription list when you're looking at someone else's subscriptions. "/>
							<outline text="* It's a community. That was the first thing I said in this email. It's all about community."/>
							</outline>
						</outline>
					<outline text="Anyway.. I'm just scratching the surface. If you're still up for this adventure, with other really kickass people, stick around. Or if you feel you won't have the time, let me know and I'll take you off the list."/>
					<outline text="BTW, so you know -- there will be at most one email a day. There might be multiple items, but that's all the mailbox attention FeedLand is asking for. "/>
					<outline text="And one other thing, please don't share this with other people. I want to build slowly and carefully. I asked you to be part of it because you're smart and thoughtful and care. Not everyone is like that.  "/>
					<outline text="Dave"/>
					</outline>
				</outline>
			<outline text="readme.md" created="Sat, 23 Jul 2022 14:58:20 GMT">
				<outline text="# FeedLand Support" created="Sat, 23 Jul 2022 14:58:22 GMT">
					<outline text="FeedLand is a place to share and discover feeds. " created="Sat, 23 Jul 2022 14:58:30 GMT"/>
					</outline>
				<outline text="### Private site" created="Sat, 23 Jul 2022 15:00:01 GMT">
					<outline text="This is a private site, but when the product is ready, it'll become public." created="Sat, 23 Jul 2022 15:00:10 GMT"/>
					<outline text="So whatever you read here for now must stay within the community, later it'll all be open for anyone to read. So keep this in mind as you write here. " created="Sat, 23 Jul 2022 15:00:33 GMT"/>
					<outline text="You might want to watch the site, so you are notified via email of updates." created="Sat, 23 Jul 2022 15:01:14 GMT"/>
					</outline>
				<outline text="### Overview of product" created="Sat, 23 Jul 2022 15:01:54 GMT">
					<outline text="I wrote a quick &lt;a href=&quot;https://github.com/scripting/feedlandSupport/blob/main/docs/overview.md&quot;&gt;overview&lt;/a&gt;, not meant as a tutorial, to give you an idea of the scope of the product. " created="Sat, 23 Jul 2022 15:02:05 GMT"/>
					</outline>
				<outline text="### There's been a delay" created="Sat, 23 Jul 2022 15:02:54 GMT">
					<outline text="It's a long story. I was planning on opening the initial testing on July 23 but we hit a snag with a system we use, we could work around but but instead, I'm going to be patient and wait. " created="Sat, 23 Jul 2022 15:03:00 GMT"/>
					<outline text="At this point I expect to open FeedLand up for initial testing early-mid the week of July 25. " created="Sat, 23 Jul 2022 15:04:17 GMT"/>
					</outline>
				<outline text="### Questions?" created="Sat, 23 Jul 2022 15:06:19 GMT">
					<outline text="If you have a question, post an &lt;a href=&quot;https://github.com/scripting/feedlandSupport/issues&quot;&gt;issue&lt;/a&gt;. " created="Sat, 23 Jul 2022 15:01:03 GMT"/>
					</outline>
				</outline>
			<outline text="rivershell/worknotes.md" created="Sun, 24 Jul 2022 20:17:49 GMT">
				<outline text="# Worknotes" created="Sun, 24 Jul 2022 20:18:18 GMT"/>
				<outline text="#### 8/2/22 by DW" created="Sun, 24 Jul 2022 20:17:52 GMT">
					<outline text="Started." created="Tue, 02 Aug 2022 21:47:20 GMT"/>
					</outline>
				</outline>
			<outline text="rivershell/package.json">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;rivershell&quot;,"/>
					<outline text="&quot;description&quot;: &quot;Rivers outside of the FeedLand app.&quot;,"/>
					<outline text="&quot;author&quot;: &quot;Dave Winer &lt;dave@smallpicture.com&gt;&quot;,"/>
					<outline text="&quot;main&quot;: &quot;rivershell.js&quot;,"/>
					<outline text="&quot;license&quot;: &quot;MIT&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.4.0&quot;,"/>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;daveutils&quot;: &quot;*&quot;,"/>
						<outline text="&quot;request&quot;: &quot;*&quot;,"/>
						<outline text="&quot;opml&quot;: &quot;*&quot;" created="Mon, 08 Mar 2021 15:15:44 GMT"/>
						<outline text="} "/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="rivershell/rivershell.js">
				<outline text="const utils = require (&quot;daveutils&quot;); "/>
				<outline text="const opml = require (&quot;opml&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const request = require (&quot;request&quot;);"/>
				<outline text="" created="Tue, 02 Aug 2022 21:49:53 GMT"/>
				<outline text="var config = {" created="Tue, 02 Aug 2022 22:05:10 GMT">
					<outline text="urlOpmlFile: &quot;http://drummer.scripting.com/davewiner/river1.opml&quot;," created="Tue, 02 Aug 2022 22:05:24 GMT"/>
					<outline text="urlDefaultServer: &quot;http://feedland.scripting.com/&quot;" created="Tue, 02 Aug 2022 22:05:34 GMT"/>
					<outline text="urlDefaultServer: &quot;http://localhost:1452/&quot;" isComment="true" created="Tue, 02 Aug 2022 22:05:34 GMT"/>
					<outline text="};" created="Tue, 02 Aug 2022 22:05:14 GMT"/>
					</outline>
				<outline text="" created="Tue, 02 Aug 2022 21:49:54 GMT"/>
				<outline text="function httpRequest (url, timeout, headers, callback) {">
					<outline text="request (url, function (err, response, data) {">
						<outline text="if (err) {" created="Sun, 08 Aug 2021 15:33:13 GMT">
							<outline text="callback (err);" created="Sun, 08 Aug 2021 15:33:17 GMT"/>
							<outline text="}" created="Sun, 08 Aug 2021 15:33:20 GMT"/>
							</outline>
						<outline text="else {" created="Sun, 08 Aug 2021 15:33:21 GMT">
							<outline text="var code = response.statusCode;" created="Tue, 04 Jan 2022 22:39:15 GMT"/>
							<outline text="if ((code &lt; 200) || (code &gt; 299)) {" created="Sun, 08 Aug 2021 15:33:23 GMT">
								<outline text="const message = &quot;The request returned a status code of &quot; + response.statusCode + &quot;.&quot;;" created="Sun, 08 Aug 2021 15:34:06 GMT"/>
								<outline text="callback ({message});" created="Sun, 08 Aug 2021 15:34:43 GMT"/>
								<outline text="}" created="Sun, 08 Aug 2021 15:33:28 GMT"/>
								</outline>
							<outline text="else {" created="Sun, 08 Aug 2021 15:33:29 GMT">
								<outline text="callback (undefined, data) "/>
								<outline text="}" created="Sun, 08 Aug 2021 15:33:31 GMT"/>
								</outline>
							<outline text="}" created="Sun, 08 Aug 2021 15:33:33 GMT"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function buildParamList (paramtable, flPrivate) { //8/10/14 by DW" created="Sat, 09 Aug 2014 15:39:08 GMT" pgfnum="43181">
					<outline text="var s = &quot;&quot;;" created="Sat, 09 Aug 2014 15:39:47 GMT" pgfnum="43188"/>
					<outline text="if (flPrivate) {" created="Sat, 09 Aug 2014 20:17:16 GMT" pgfnum="43185">
						<outline text="paramtable.flprivate = &quot;true&quot;;" created="Sat, 09 Aug 2014 15:43:48 GMT" pgfnum="43208"/>
						<outline text="}" created="Sat, 09 Aug 2014 20:17:19 GMT" pgfnum="43186"/>
						</outline>
					<outline text="for (var x in paramtable) {" created="Sat, 09 Aug 2014 15:39:38 GMT" pgfnum="43186">
						<outline text="if (s.length &gt; 0) {" created="Sat, 09 Aug 2014 15:40:02 GMT" pgfnum="43189">
							<outline text="s += &quot;&amp;&quot;;" created="Sat, 09 Aug 2014 15:40:08 GMT" pgfnum="43190"/>
							<outline text="}" created="Sat, 09 Aug 2014 15:40:14 GMT" pgfnum="43191"/>
							</outline>
						<outline text="s += x + &quot;=&quot; + encodeURIComponent (paramtable [x]);" created="Sat, 09 Aug 2014 15:40:19 GMT" pgfnum="43192"/>
						<outline text="}" created="Sat, 09 Aug 2014 15:39:43 GMT" pgfnum="43187"/>
						</outline>
					<outline text="return (s);" created="Sat, 09 Aug 2014 15:40:54 GMT" pgfnum="43193"/>
					<outline text="}" created="Sat, 09 Aug 2014 15:39:35 GMT" pgfnum="43185"/>
					</outline>
				<outline text="function servercall (path, params, flAuthenticated, callback, urlServer=config.urlDefaultServer) {">
					<outline text="Changes" isComment="true">
						<outline text="12/10/21; 12:51:58 PM by DW" created="Fri, 10 Dec 2021 17:51:57 GMT">
							<outline text="New optional parameter, urlServer, so this function can be used to call Daytona." created="Fri, 10 Dec 2021 17:51:58 GMT"/>
							</outline>
						<outline text="1/11/21; 12:51:47 PM by DW">
							<outline text="New param, flAuthenticated. If true we add the oAuth info to the call. "/>
							</outline>
						</outline>
					<outline text="var whenstart = new Date ();"/>
					<outline text="if (params === undefined) {">
						<outline text="params = new Object ();"/>
						<outline text="}"/>
						</outline>
					<outline text="if (flAuthenticated) { //1/11/21 by DW" isComment="true">
						<outline text="params.oauth_token = localStorage.twOauthToken;"/>
						<outline text="params.oauth_token_secret = localStorage.twOauthTokenSecret;"/>
						<outline text="}"/>
						</outline>
					<outline text="var url = urlServer + path + &quot;?&quot; + buildParamList (params, false);" created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215"/>
					<outline text="httpRequest (url, undefined, undefined, function (err, jsontext) {">
						<outline text="if (err) {">
							<outline text="console.log (&quot;servercall: url == &quot; + url + &quot;, err.message == &quot; + err.message);" isComment="true"/>
							<outline text="callback (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="console.log (&quot;servercall: jsontext.length == &quot; + jsontext.length + &quot;, secs == &quot; + secondsSince (whenstart)); " isComment="true"/>
							<outline text="callback (undefined, JSON.parse (jsontext));"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function getOutline (url, callback) {" created="Tue, 02 Aug 2022 21:56:07 GMT">
					<outline text="httpRequest (urlOpmlFile, undefined, undefined, function (err, opmltext) {" created="Thu, 17 Jun 2021 19:56:51 GMT">
						<outline text="if (err) {" created="Sun, 08 Aug 2021 15:12:18 GMT">
							<outline text="callback (err);" created="Sun, 08 Aug 2021 15:14:05 GMT"/>
							<outline text="}" created="Sun, 08 Aug 2021 15:14:10 GMT"/>
							</outline>
						<outline text="else {" created="Sun, 08 Aug 2021 15:12:29 GMT">
							<outline text="opml.parse (opmltext, function (err, theOutline) {">
								<outline text="if (err) {">
									<outline text="callback (err);" created="Sun, 08 Aug 2021 15:14:05 GMT"/>
									<outline text="}"/>
									</outline>
								<outline text="else {">
									<outline text="callback (undefined, theOutline);" created="Mon, 03 Jan 2022 16:44:53 GMT"/>
									<outline text="}"/>
									</outline>
								<outline text="});"/>
								</outline>
							<outline text="}" created="Sun, 08 Aug 2021 15:12:31 GMT"/>
							</outline>
						<outline text="})" created="Thu, 17 Jun 2021 19:58:33 GMT"/>
						</outline>
					<outline text="}" created="Tue, 02 Aug 2022 21:56:18 GMT"/>
					</outline>
				<outline text="function getRiverFromList (feedUrlList, callback) {" created="Wed, 23 Mar 2022 14:28:05 GMT">
					<outline text="var jsontext = JSON.stringify (feedUrlList);" created="Wed, 03 Aug 2022 13:18:32 GMT"/>
					<outline text="servercall (&quot;getriverfromlist&quot;, {list: jsontext}, false, function (err, theRiver) {">
						<outline text="if (err) {" created="Sat, 20 Feb 2021 17:20:29 GMT">
							<outline text="callback (err);" created="Thu, 25 Mar 2021 15:34:16 GMT"/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:36 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 20 Feb 2021 17:20:36 GMT">
							<outline text="callback (undefined, theRiver); "/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:38 GMT"/>
							</outline>
						<outline text="});" created="Sat, 20 Feb 2021 17:20:14 GMT"/>
						</outline>
					<outline text="}" created="Wed, 23 Mar 2022 14:28:26 GMT"/>
					</outline>
				<outline text="" created="Tue, 02 Aug 2022 21:56:38 GMT"/>
				<outline text="getOutline (config.urlOpmlFile, function (err, theOutline) {" created="Tue, 02 Aug 2022 21:56:38 GMT">
					<outline text="if (err) {" created="Tue, 02 Aug 2022 21:56:56 GMT">
						<outline text="console.log (err.message);" created="Tue, 02 Aug 2022 21:56:59 GMT"/>
						<outline text="}" created="Tue, 02 Aug 2022 21:57:04 GMT"/>
						</outline>
					<outline text="else {" created="Tue, 02 Aug 2022 21:57:05 GMT">
						<outline text="var feedUrlList = new Array ();" created="Tue, 02 Aug 2022 22:00:31 GMT"/>
						<outline text="theOutline.opml.body.subs.forEach (function (item) {" created="Tue, 02 Aug 2022 22:00:50 GMT">
							<outline text="if (item.xmlUrl !== undefined) {" created="Tue, 02 Aug 2022 22:08:09 GMT">
								<outline text="feedUrlList.push (item.xmlUrl);" created="Tue, 02 Aug 2022 22:01:38 GMT"/>
								<outline text="}" created="Tue, 02 Aug 2022 22:08:14 GMT"/>
								</outline>
							<outline text="});" created="Tue, 02 Aug 2022 22:01:07 GMT"/>
							</outline>
						<outline text="console.log (utils.jsonStringify (feedUrlList));" created="Tue, 02 Aug 2022 21:57:07 GMT"/>
						<outline text="getRiverFromList (feedUrlList, function (err, theRiver) {">
							<outline text="if (err) {" created="Tue, 02 Aug 2022 21:56:56 GMT">
								<outline text="console.log (err.message);" created="Tue, 02 Aug 2022 21:56:59 GMT"/>
								<outline text="}" created="Tue, 02 Aug 2022 21:57:04 GMT"/>
								</outline>
							<outline text="else {" created="Tue, 02 Aug 2022 22:08:28 GMT">
								<outline text="console.log (utils.jsonStringify (theRiver));" created="Tue, 02 Aug 2022 21:57:07 GMT"/>
								<outline text="}" created="Tue, 02 Aug 2022 22:08:30 GMT"/>
								</outline>
							<outline text="});" created="Tue, 02 Aug 2022 22:07:43 GMT"/>
							</outline>
						<outline text="}" created="Tue, 02 Aug 2022 21:57:24 GMT"/>
						</outline>
					<outline text="});" created="Tue, 02 Aug 2022 21:56:49 GMT"/>
					</outline>
				</outline>
			</outline>
		<outline text="build script" created="Sat, 23 Jul 2022 14:53:26 GMT">
			<outline text="nodeEditorSuite.utilities.buildIFeedlandSupport ()" created="Fri, 18 Feb 2022 16:51:42 GMT"/>
			</outline>
		</body>
	</opml>
